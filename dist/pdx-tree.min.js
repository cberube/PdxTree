angular.module("pdxTree",[]),angular.module("pdxTree").provider("pdxTreeChildManagerService",[function(){"use strict";function PdxTreeChildLoader(){this.loadChildren=loadChildren,this.hasChildren=hasChildren,this.areChildrenLoading=areChildrenLoading}var defaultHasChildren=function(node){return angular.isArray(node.childList)&&node.childList.length>0},loadChildren=function(node,config){config&&angular.isFunction(config.loadChildren)&&config.loadChildren(node,angular.noop)},hasChildren=function(node,config){return config&&angular.isFunction(config.hasChildren)?config.hasChildren(node,defaultHasChildren):defaultHasChildren(node)},areChildrenLoading=function(itemList){return itemList===!1?!1:"undefined"!=typeof itemList.$resolved?!itemList.$resolved:!angular.isArray(itemList)};this.$get=function(){return new PdxTreeChildLoader}}]),angular.module("pdxTree").directive("pdxTree",["$compile",function($compile){var defaultConfig={loadingTemplate:"<div>Loading...</div>",listContainerTemplate:"<ul></ul>",itemContainerTemplate:"<li></li>",itemNameTemplate:"<div ng-click='expand(item)'><span class='glyphicon' ng-class='getIcon(item)'></span>{{ item.name }}</div>",childListTemplate:"<div ng-if='item.expanded'></div>"};return{restrict:"EA",scope:{itemList:"=",config:"=","class":"@",id:"@",pdxTreeConfig:"="},link:function(scope,element){scope.pdxTreeConfig=angular.extend(defaultConfig,scope.pdxTreeConfig);var template="<div class='{{class}}' id='{{id}}'><pdx-tree-branch pdx-tree-config='pdxTreeConfig' item-list='itemList'></pdx-tree-branch></div>",newElement=angular.element(template);$compile(newElement)(scope),element.replaceWith(newElement)}}}]),angular.module("pdxTree").directive("pdxTreeBranch",["$compile","pdxTreeChildManagerService",function($compile,childManagerService){return{restrict:"EA",scope:{itemList:"=",pdxTreeConfig:"="},controller:function($scope){$scope.areChildrenLoading=childManagerService.areChildrenLoading},link:function(scope,element){var templateElement=angular.element(scope.pdxTreeConfig.listContainerTemplate),loadingElement=angular.element(scope.pdxTreeConfig.loadingTemplate),itemElement=angular.element("<pdx-tree-item pdx-tree-config='pdxTreeConfig' ng-repeat='item in itemList' item='item'></pdx-tree-item>");loadingElement.attr("ng-show","areChildrenLoading(itemList)"),templateElement.append(loadingElement),templateElement.append(itemElement),$compile(templateElement)(scope),element.replaceWith(templateElement)}}}]),angular.module("pdxTree").directive("pdxTreeItem",["$compile","pdxTreeChildManagerService",function($compile,childManagerService){return{restrict:"EA",scope:{item:"=",pdxTreeConfig:"="},controller:function($scope){$scope.expand=function(item){childManagerService.hasChildren(item,$scope.pdxTreeConfig)&&(item.expanded=!item.expanded,item.expanded&&childManagerService.loadChildren(item,$scope.pdxTreeConfig))},$scope.getIcon=function(item){return childManagerService.hasChildren(item,$scope.pdxTreeConfig)?item.expanded?"glyphicon-collapse-down":"glyphicon-expand":"glyphicon-unchecked"}},link:function(scope,element){var containerElement=angular.element(scope.pdxTreeConfig.itemContainerTemplate),itemNameElement=angular.element(scope.pdxTreeConfig.itemNameTemplate),childListElement=angular.element(scope.pdxTreeConfig.childListTemplate),branchElement=angular.element('<pdx-tree-branch pdx-tree-config="pdxTreeConfig" item-list="item.childList"></pdx-tree-branch>');childListElement.append(branchElement),containerElement.append(itemNameElement),containerElement.append(childListElement),$compile(containerElement)(scope,function(compiledElement){element.replaceWith(compiledElement)})}}}]);