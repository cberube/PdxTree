angular.module("pdxTree",[]),angular.module("pdxTree").service("pdxTreeChildManagerService",[function(){"use strict";var areChildrenLoading=function(itemList){return itemList===!1?!1:"undefined"!=typeof itemList.$resolved?!itemList.$resolved:!angular.isArray(itemList)},hasChildren=function(node){return node&&node.childList&&angular.isArray(node.childList)&&node.childList.length>0};return{hasChildren:hasChildren,areChildrenLoading:areChildrenLoading}}]),angular.module("pdxTree").service("pdxTreeDomService",[function(){var destroyChildren=function(parentElement){angular.forEach(parentElement.children(),function(element){var scope;element=angular.element(element),scope=element.scope(),scope&&!scope.$$destroyed&&scope.$destroy(),destroyChildren(element),element.remove()})},appendAllElements=function(parentElement,elementList){angular.forEach(elementList,function(element){parentElement.append(element)})},findChildWithAttribute=function(parent,attribute,recursive){var attributeValue,i,children=parent.children(),childrenSearchResult=null;for(i=0;i<children.length;i++){if(attributeValue=children[i].getAttribute(attribute),"undefined"!=typeof attributeValue&&null!==attributeValue)return children[i];if(recursive&&(childrenSearchResult=findChildWithAttribute(angular.element(children[i]),attribute,!0),null!==childrenSearchResult))return childrenSearchResult}return null};return{appendAllElements:appendAllElements,destroyChildren:destroyChildren,findChildWithAttribute:findChildWithAttribute}}]),angular.module("pdxTree").directive("pdxTree",["$rootScope","$compile","pdxTreeChildManagerService","pdxTreeDomService",function($rootScope,$compile,childManagerService,pdxTreeDomService){var toggleChildren=function(){this.node.expanded=!this.node.expanded,this.node.expanded&&null==this.node.childList&&this.loadChildren(this.node)},renderChildren=function(itemScope){return pdxTreeDomService.destroyChildren(itemScope.containerElement),itemScope.node.expanded&&itemScope.node.childList?itemScope.node.childList.$promise&&!itemScope.node.childList.$resolved?(itemScope.node.childList.$promise.then(angular.bind(this,renderChildren,itemScope)),void 0):(angular.forEach(itemScope.node.childList,function(child){pdxTreeDomService.appendAllElements(itemScope.containerElement,createItemElement(itemScope,child))}),void 0):void 0},createItemElement=function(scope,node){var itemElement,containerElement,childContainerTemplate,childContainerElement,itemTemplate=$compile(scope.itemTemplate.clone()),itemScope=scope.$new(),elementList=[];return itemScope.node=node,itemScope.itemTemplate=scope.itemTemplate.clone(),itemScope.pdxTreeNodeDepth=scope.pdxTreeNodeDepth+1,itemElement=itemTemplate(itemScope),elementList.push(itemElement),itemScope.siblingChildContainerTemplate?(childContainerTemplate=$compile(angular.element(itemScope.siblingChildContainerTemplate).clone()),containerElement=childContainerTemplate(itemScope),elementList.push(containerElement)):(childContainerElement=pdxTreeDomService.findChildWithAttribute(itemElement,"pdx-tree-children",!0),childContainerTemplate=$compile(angular.element(childContainerElement)),containerElement=childContainerTemplate(itemScope),angular.element(childContainerElement).replaceWith(containerElement)),itemScope.containerElement=containerElement,itemScope.$watch("node.expanded",angular.bind(itemScope,renderChildren,itemScope)),itemScope.$watch("node.childList",angular.bind(itemScope,renderChildren,itemScope)),elementList};return{restrict:"EA",replace:!0,scope:{pdxTreeNodeList:"=",pdxTreeOptions:"="},link:function(scope,element){var siblingChildContainer;scope.itemTemplate=angular.element(pdxTreeDomService.findChildWithAttribute(element,"pdx-tree-item",!1)),scope.siblingChildContainerTemplate=null,scope.toggleChildren=toggleChildren,scope.loadChildren=scope.pdxTreeOptions.loadChildren||function(){return!1},scope.pdxTreeNodeDepth=0,siblingChildContainer=pdxTreeDomService.findChildWithAttribute(element,"pdx-tree-children",!1),null!==siblingChildContainer&&(scope.siblingChildContainerTemplate=angular.element(siblingChildContainer)),element.html(""),angular.forEach(scope.pdxTreeNodeList,function(node){pdxTreeDomService.appendAllElements(element,createItemElement(scope,node))})}}}]);